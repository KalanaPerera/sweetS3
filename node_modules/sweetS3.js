var s3 = require('s3'),
    fs = require('fs'),
    dir = require('node-dir');



var client = s3.createClient({
    maxAsyncS3: 20, // this is the default 
    s3RetryCount: 3, // this is the default 
    s3RetryDelay: 1000, // this is the default 
    multipartUploadThreshold: 20971520, // this is the default (20 MB) 
    multipartUploadSize: 15728640, // this is the default (15 MB) 
    s3Options: {
        accessKeyId: "",
        secretAccessKey: "",
        region: 'ap-south-1',
        // any other options are passed to new AWS.S3() 
        // See: http://docs.aws.amazon.com/AWSJavaScriptSDK/latest/AWS/Config.html#constructor-property 
    },
});


var date = new Date();
var nextYear = date.setFullYear(date.getFullYear() + 1);



/*
 * @param
 * file : file path => \xampp\htdocs\test_aws\images\large\StripAd_GIF.gif
 * expires : date time : Wed Jul 27 2016 14:41:22 GMT+0530 (Sri Lanka Standard Time)
 */
function uploader(file,expires) {
    console.log(expires)
    var params = {
        localFile:file,
        s3Params: {
            Bucket: "rgfiles1",
            Key: "testrg/"+file,
            ACL: 'public-read',
            Expires:expires

                    // other options supported by getObject 
                    // See: http://docs.aws.amazon.com/AWSJavaScriptSDK/latest/AWS/S3.html#getObject-property 
        },
    };


    var uploader = client.uploadFile(params);
    uploader.on('error', function (err) {
        console.error("unable to upload:", err.stack);
    });
    uploader.on('progress', function () {
        console.log("progress", uploader.progressMd5Amount,
                uploader.progressAmount, uploader.progressTotal);
    });
    uploader.on('end', function () {
        console.log("done uploading");
    });

}


//readFiles('../../test_aws/', function(filename) {
//  console.log(filename);
//}, function(error) {
//  console.log(error);
//});

// display contents of files in this script's directory
dir.readFiles('/xampp/htdocs/test_aws',
    function(err, content, next) {
        if (err) throw err;
        //console.log('content:', content);
        next();
    },
    function(err, files){
        if (err) throw err;
        //console.log('finished reading files:', files);
        
        
        var fileCount = files.length;
        for(var i =0; i < fileCount;i++){
            
            var fileName = files[i];
            
            uploader(fileName,nextYear);
            
            
            
        }
        
        
        
        
    });